# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get variables
        id: get_variables
        run: |
          VERSION="$(grep '^VERSION=' Makefile | sed -e 's/VERSION=//')"
          echo "::set-output name=version::${VERSION}"
          PACKAGE="$(grep '^PACKAGE=' Makefile | sed -e 's/PACKAGE=//')"
          echo "::set-output name=package::${PACKAGE}"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ steps.get_variables.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: docker
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: PACKAGE=${{ steps.get_variables.outputs.package }}